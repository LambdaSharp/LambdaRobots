Module: Challenge.LambdaRobots.Server
Version: 1.0-DEV
Description: Lambda-Robots is based on the 90s game P-Robots by David Malmberg
Pragmas:
  - Overrides:
      Module::WebSocket.RouteSelectionExpression: $request.body.Action
Items:

  - Resource: GameTable
    Description: Table for holding all active games and their WebSocket connections
    Scope: all
    Type: AWS::DynamoDB::Table
    Allow: ReadWrite
    Scope: all
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE

  - Function: ServerFunction
    Description: Function for handling REST API and WebSocket interactions
    Memory: 256
    Timeout: 30
    Sources:
      - WebSocket: $connect
        Invoke: OpenConnection
      - WebSocket: $disconnect
        Invoke: CloseConnection
      - WebSocket: start
        Invoke: StartGame
      - WebSocket: stop
        Invoke: StopGame
      - Api: POST:/scan
        Invoke: ScanEnemies

  - Function: GameTurnFunction
    Description: Function for computing the next game turn
    Memory: 256
    Timeout: 30

  - Resource: GameLoopStateMachine
    Scope: ServerFunction
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString: !Sub [ !Include GameLoopStateMachine.json, { } ]
      RoleArn: !GetAtt GameLoopStateMachineRole.Arn

  - Resource: GameLoopStateMachineRole
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub states.${AWS::Region}.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: StatesExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: "*"

  - Resource: GameLoopStateMachineStartStopPolicy
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "${AWS::StackName}GameLoopStateMachineStartStopPolicy"
      PolicyDocument:
        Id: GameLoopStateMachineStateStartStopPolicy
        Version: "2012-10-17"
        Statement:
          - Sid: StateMachineStartStopPermission
            Effect: Allow
            Action:
            - states:StartExecution
            - states:StopExecution
            Resource: !Ref GameLoopStateMachine
      Roles:
        - !Ref Module::Role

  - Resource: InvokeLambdasPermission
    Allow: lambda:InvokeFunction
    Value: "*"

  - Variable: WebSocketUrl
    Description: WebSocket URL
    Scope: public
    Value: !Ref Module::WebSocket::Url

  - Variable: RestApiUrl
    Description: REST API URL
    Scope: public, GameTurnFunction
    Value: !Ref Module::RestApi::Url