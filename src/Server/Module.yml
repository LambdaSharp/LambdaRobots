Module: LambdaRobots.Server
Description: Lambda-Robots is based on the 90s game P-Robots by David Malmberg
Pragmas:
  - Overrides:
      Module::WebSocket.RouteSelectionExpression: $request.body.Action
Using:
  - Module: LambdaSharp.S3.IO@lambdasharp
Items:

  - Resource: GameTable
    Description: Table for holding all active games and their WebSocket connections
    Scope: all
    Type: AWS::DynamoDB::Table
    Allow: ReadWrite
    Scope: all
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: Expire
        Enabled: true

  - Function: ServerFunction
    Description: Function for handling REST API and WebSocket interactions
    Memory: 1769
    Timeout: 30
    Sources:

      # REST API
      - Api: POST:/{gameId}/scan
        Invoke: ScanEnemies

      # WebSocket API
      - WebSocket: $connect
        Invoke: OpenConnection
      - WebSocket: $disconnect
        Invoke: CloseConnection
      - WebSocket: start
        Invoke: StartGame
      - WebSocket: stop
        Invoke: StopGame

  - Function: GameTurnFunction
    Scope: ServerFunction
    Description: Function for computing the next game turn
    Memory: 1769
    Timeout: 900

  - Resource: InvokeLambdasPermission
    Allow: lambda:InvokeFunction
    Value: "*"

  - Resource: WebsiteBucket
    Description: S3 bucket for hosting the game
    Type: AWS::S3::Bucket
    Properties:
      WebsiteConfiguration:
        IndexDocument: index.html

  - Resource: WebsiteBucketPolicy
    Description: Public access policy
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: WebsiteBucket
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: "*"
            Action: s3:GetObject
            Resource: !Sub "${WebsiteBucket.Arn}/*"
      Bucket: !Ref WebsiteBucket
    DependsOn: DeployWebsiteFiles

  - Package: WebsiteFiles
    Description: Website files to deploy
    Files: Packages/wwwroot

  - Resource: DeployWebsiteFiles
    Type: LambdaSharp::S3::Unzip
    Properties:
      SourceBucket: !Ref DeploymentBucketName
      SourceKey: !Ref WebsiteFiles
      DestinationBucket: !Ref WebsiteBucket
      DestinationKey: ""

  - Resource: WebsiteConfigJson
    Type: LambdaSharp::S3::WriteJson
    Properties:
      Bucket: !Ref WebsiteBucket
      Key: config.json
      Contents:
        wss: !Ref Module::WebSocket::Url

  - Variable: RestApiUrl
    Description: REST API URL
    Scope: GameTurnFunction
    Value: !Ref Module::RestApi::Url

  # Output Variables
  - Variable: LambdaRobotsServerUrl
    Description: URL for the Lambda-Robots web-server
    Scope: public
    Value: !GetAtt WebsiteBucket.WebsiteURL
